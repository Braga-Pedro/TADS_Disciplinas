1.
Um algoritmo realiza n² + 2^(n+2) operações primitivas até terminar, no pior caso. Determine a sua complexidade (taxa de crescimento) usando a notação O. Explique como você chegou a esse resultado.

O = n² + 2^(n+2) -> O(n²+2^n) -> O(n^n)
RESPOSTA: O(n^n)

2. N;logN;NlogN;N²;N³

3. 
tamanho entrada = a^n -> O(a^n)

n >= 2 && n <= 10^9
soma >= 1 ; soma <= 2^(10^9)
